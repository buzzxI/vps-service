user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

# enable stream module -> sni routing
stream {
    # map config to backend names based on SNI
    map $ssl_preread_server_name $backend_name {
        # target server name for xray reality
        ${REALITY_DOMAIN} reality;
        # target server name for xray websocket
        ${DOMAIN} websocket;
    }

    # reality fallback to xray
    upstream reality {
        server 127.0.0.1:2992;
    }

    # websocket fallback to xray
    upstream websocket {
        server 127.0.0.1:4075;
    }

    # server listening on port 443 for SNI routing
    server {
        listen 443;
        # use the mapped backend name based on SNI
        proxy_pass $backend_name;
        # enable SSL preread for SNI
        ssl_preread on;
    }
    
    # config log format name: "sni_log"
    log_format sni_log '[$time_local] $remote_addr SNI="$ssl_preread_server_name"';
    # save "sni_log" log to log access sni info
    access_log /var/log/nginx/sni-access.log sni_log;
}

http {
        # redirect http to https
        server {
                listen 80;
                server_name ${DOMAIN};

                # ACME webroot validation path
                location /.well-known/acme-challenge/ {
                    root /usr/share/nginx/webpage;
                    try_files $uri =404;
                }
        
                # Redirect other HTTP traffic to HTTPS
                location / {
                    return 301 https://$http_host$request_uri;
                }
        }

        # default fallback -> static webpage 
        server {
                listen 127.0.0.1:5424;
                root /usr/share/nginx/webpage;
                index index.html;
                add_header Strict-Transport-Security "max-age=63072000" always;
        }

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        # get client ip from x-forwarded-for header
        map $http_x_forwarded_for $client_ip {
            "" $remote_addr;
            "~*(?P<firstAddr>([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}|([0-9]{1,3}\.){3}[0-9]{1,3})$" $firstAddr;
        }
        #启用访问日志，其调整后的配置如下：（选配）
        # config log format name: "main"
        log_format main '$client_ip - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
        # save "main" log as default log
        access_log /var/log/nginx/access.log main; #访问日志的文件地址。（选配）
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}